<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.school.mapper.ScoreMapper" >
  <resultMap id="BaseResultMap" type="com.school.school.domain.Score" >
    <id column="stuNo" property="stuno" jdbcType="VARCHAR" />
    <result column="chinese" property="chinese" jdbcType="VARCHAR" />
    <result column="math" property="math" jdbcType="VARCHAR" />
    <result column="english" property="english" jdbcType="VARCHAR" />
    <result column="physical" property="physical" jdbcType="VARCHAR" />
    <result column="chemical" property="chemical" jdbcType="VARCHAR" />
    <result column="biological" property="biological" jdbcType="VARCHAR" />
    <result column="geographic" property="geographic" jdbcType="VARCHAR" />
    <result column="political" property="political" jdbcType="VARCHAR" />
    <result column="history" property="history" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="testName" property="testName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    stuNo, chinese, math, english, physical, chemical, biological, geographic, political,
    history
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from score
    where stuNo = #{stuno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from score
    where stuNo = #{stuno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.school.school.domain.Score" >
    insert into score (stuNo, chinese, math,
      english, physical, chemical,
      biological, geographic, political,
      history)
    values (#{stuno,jdbcType=VARCHAR}, #{chinese,jdbcType=VARCHAR}, #{math,jdbcType=VARCHAR},
      #{english,jdbcType=VARCHAR}, #{physical,jdbcType=VARCHAR}, #{chemical,jdbcType=VARCHAR},
      #{biological,jdbcType=VARCHAR}, #{geographic,jdbcType=VARCHAR}, #{political,jdbcType=VARCHAR},
      #{history,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.school.school.domain.Score" >
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuno != null" >
        stuNo,
      </if>
      <if test="chinese != null" >
        chinese,
      </if>
      <if test="math != null" >
        math,
      </if>
      <if test="english != null" >
        english,
      </if>
      <if test="physical != null" >
        physical,
      </if>
      <if test="chemical != null" >
        chemical,
      </if>
      <if test="biological != null" >
        biological,
      </if>
      <if test="geographic != null" >
        geographic,
      </if>
      <if test="political != null" >
        political,
      </if>
      <if test="history != null" >
        history,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuno != null" >
        #{stuno,jdbcType=VARCHAR},
      </if>
      <if test="chinese != null" >
        #{chinese,jdbcType=VARCHAR},
      </if>
      <if test="math != null" >
        #{math,jdbcType=VARCHAR},
      </if>
      <if test="english != null" >
        #{english,jdbcType=VARCHAR},
      </if>
      <if test="physical != null" >
        #{physical,jdbcType=VARCHAR},
      </if>
      <if test="chemical != null" >
        #{chemical,jdbcType=VARCHAR},
      </if>
      <if test="biological != null" >
        #{biological,jdbcType=VARCHAR},
      </if>
      <if test="geographic != null" >
        #{geographic,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="history != null" >
        #{history,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.school.domain.Score" >
    update score
    <set >
      <if test="chinese != null" >
        chinese = #{chinese,jdbcType=VARCHAR},
      </if>
      <if test="math != null" >
        math = #{math,jdbcType=VARCHAR},
      </if>
      <if test="english != null" >
        english = #{english,jdbcType=VARCHAR},
      </if>
      <if test="physical != null" >
        physical = #{physical,jdbcType=VARCHAR},
      </if>
      <if test="chemical != null" >
        chemical = #{chemical,jdbcType=VARCHAR},
      </if>
      <if test="biological != null" >
        biological = #{biological,jdbcType=VARCHAR},
      </if>
      <if test="geographic != null" >
        geographic = #{geographic,jdbcType=VARCHAR},
      </if>
      <if test="political != null" >
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="history != null" >
        history = #{history,jdbcType=VARCHAR},
      </if>
    </set>
    where stuNo = #{stuno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.school.domain.Score" >
    update score
    set chinese = #{chinese,jdbcType=VARCHAR},
      math = #{math,jdbcType=VARCHAR},
      english = #{english,jdbcType=VARCHAR},
      physical = #{physical,jdbcType=VARCHAR},
      chemical = #{chemical,jdbcType=VARCHAR},
      biological = #{biological,jdbcType=VARCHAR},
      geographic = #{geographic,jdbcType=VARCHAR},
      political = #{political,jdbcType=VARCHAR},
      history = #{history,jdbcType=VARCHAR}
    where stuNo = #{stuno,jdbcType=VARCHAR}
  </update>

  <select id="getAllScoreByStuNo"  resultMap="BaseResultMap" parameterType="java.lang.String">
      SELECT  c.score chinese,m.score math
      FROM student s ,testmanger t
      LEFT JOIN chinese c ON c.testNo = t.testNo
      LEFT JOIN math m ON m.testNo = t.testNo
      WHERE  s.stuNo = #{stuno,jdbcType=VARCHAR} AND t.testDate =(SELECT MAX(testDate) FROM  testmanger)
  </select>

  <select id="getAllScore" resultMap="BaseResultMap">
        SELECT  c.score chinese,m.score math,t.testName
      FROM student s ,testmanger t
      LEFT JOIN chinese c ON c.testNo = t.testNo
      LEFT JOIN math m ON m.testNo = t.testNo
      WHERE  s.stuNo = #{stuno,jdbcType=VARCHAR}
  </select>
</mapper>
